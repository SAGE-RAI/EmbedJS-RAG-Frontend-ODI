<%- include('../../partials/header-admin') %>
<style>
    .longText {
        min-width: 80%;
    }
    .submit {
        margin-top: 2em;
    }
</style>
<h1><%= pageTitle %></h1>
<div id="res" class="alert"></div>
<form id="dataForm"></form>

<script>
// default ratings response if none is submitted 
const defaultRatingResponses = {
        1: [
            "Don't like the style",
            "Not factually correct",
            "Didn't fully follow instructions",
            "Refused when it shouldn't have",
            "Wrong or no sources"
        ],
        2: [
            "Not helpful",
            "Confusing response",
            "Didn't provide enough detail",
            "Incomplete information",
            "Wrong or no sources"
        ],
        3: [
            "Somewhat helpful",
            "Partially correct",
            "Room for improvement",
            "Average response",
            "Needs more detail"
        ],
        4: [
            "Quite helpful",
            "Mostly correct",
            "Good response",
            "Well-written",
            "Informative"
        ],
        5: [
            "Very helpful",
            "Completely correct",
            "Excellent response",
            "Clear and concise",
            "Highly informative"
        ]
    };
    
const data = {};
$('#dataForm').html("");
$('#result').html("");
$('form').show();

document.addEventListener("DOMContentLoaded", function () {
    // Fetch the schema
    fetch('/schemas/ragInstance.json')
        .then(response => response.json())
        .then(schema => {
            // Render the form with empty data
            $('#dataForm').jsonForm({
                schema: schema.schema,
                form: schema.form,
                value: data,
                onSubmit: function (errors, values) {
                    addRagInstance(errors, values);
                }
            });
            // After the form has been loaded, add the event listener for provider change
            const providerField = $('select[name="model.provider"]');
            const baseUrlField = $('input[name="model.baseUrl"]');
            const nameField = $('input[name="model.name"]');

            // Initially disable the Base URL field
            baseUrlField.prop('disabled', true);

            // Add change event listener to provider field
            providerField.change(function () {
                const selectedProvider = $(this).val();
                if (selectedProvider === 'Azure' || selectedProvider === 'Ollama' || selectedProvider === 'OpenAI') {
                    baseUrlField.prop('disabled', false);
                    if (selectedProvider === 'Azure') {
                        nameField.prop('disabled', true).val('');
                    }
                } else {
                    baseUrlField.prop('disabled', true).val(''); // Disable and clear value
                    nameField.prop('disabled', false);
                }
            });

            const embedProviderField = $('select[name="embedModel.provider"]');
            const embedBaseUrlField = $('input[name="embedModel.baseUrl"]');
            const embedNameField = $('input[name="embedModel.name"]');
            const embedDimensionsField = $('input[name="embedModel.dimensions"]');

            // Initially disable the Base URL field
            embedBaseUrlField.prop('disabled', true);

            selectedEmbedProvider = embedProviderField.val();
            selectedEmbedName = embedNameField.val();
            if (selectedEmbedProvider !== 'OpenAI') {
                embedBaseUrlField.prop('disabled', true);
                embedNameField.prop('disabled', true).val('');
                embedDimensionsField.prop('disabled', true);
            }

            // Add change event listener to provider field
            embedProviderField.change(function () {
                const selectedEmbedProvider = $(this).val();
                if (selectedEmbedProvider !== 'OpenAI') {
                    embedBaseUrlField.prop('disabled', true).val('');
                    embedNameField.prop('disabled', true).val('');
                    embedDimensionsField.prop('disabled', true);
                } else {
                    embedBaseUrlField.prop('disabled', false).val('');
                    embedNameField.prop('disabled', false);
                    embedDimensionsField.prop('disabled', false)
                }
            });

            embedNameField.change(function () {
                embedDimensionsField.prop('disabled', false);
                if (selectedEmbedProvider === 'OpenAI') {
                    const selectedEmbedName = $(this).val();
                    if (selectedEmbedName === 'text-embedding-3-small' || selectedEmbedName === 'text-embedding-ada-002') {
                        embedDimensionsField.prop('disabled', true);
                    } else {
                        embedDimensionsField.prop('disabled', false);
                    }
                } else {
                    embedDimensionsField.prop('disabled', true);
                }
            });
        })
        .catch(error => {
            console.error("Error fetching schema:", error);
        });
});

function addRagInstance(errors, values) {
    if (errors) {
        $('#res').html('<p>Please correct the errors in your form</p>');
    } else {
         // Check if user provided ratingResponses
         if (!values.ratingResponses || Object.keys(values.ratingResponses).length === 0) {
            // If not provided, set to defaultRatingResponses
            values.ratingResponses = defaultRatingResponses;
        }

        // Disable the submit button
        $('.submit').prop('disabled', true);
        // Display a message while submitting
        $('#res').html('<p>Submitting, please wait...</p>');
        var inputObject = values;
        var postUrl = '/instances/';

        // Post the input object to the appropriate URL
        fetch(postUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(inputObject)
        })
        .then(response => response.json())
        .then(data => {
            // Handle response
            if (data._id) {
                // Re-enable the submit button
                $('.submit').prop('disabled', false);
                $('#res').html(`<p>Successfully created with ID: ${data._id}</p>`);
            } else if (data.error) {
                $('#res').html(`<p>Error: ${data.error}</p>`);
            } else {
                $('#res').html('<p>Unknown error occurred</p>');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            $('#res').html('<p>An error occurred while processing your request</p>');
        });
    }
}
</script>

<%- include('../../partials/footer') %>