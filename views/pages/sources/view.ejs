<%- include('../../partials/header') %>
<div class="padded">
    <style>
        /* Add your custom styles here */
    </style>

    <div style="text-align: center;">
        <div id="res" class="alert"></div>
    </div>
    <h1>Sources</h1>

    <% if (userCanEditSources) { %>
        <div style="text-align: center;">
            <a href="/instances/<%= instanceId %>/sources/add"><button>Add source</button></a>
            <a href="/instances/<%= instanceId %>/sources/import"><button>Bulk import</button></a>
        </div>
        <br/>
    <% } %>
    <div id="sitemapStatusContainer" style="display: none;">
        <h2>SiteMap Import Status</h2>
        <table id="sitemapStatusTable" class="display" style="width:100%"></table>
    </div>

    <h2>Sources (itemized)</h2>
    <p>The table below lists the sources of information that are used to try and answer queries. Each source is divided into <b>chunks</b> of text to make searching for concepts more optimized. The <b>tokens</b> is a rough indication of the size of the source.</p>
    <table id="sourcesTable" class="display" style="width:100%"></table>

    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.5/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.0/js/dataTables.buttons.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.0/js/buttons.html5.min.js"></script>
    <script src="https://cdn.datatables.net/buttons/1.7.0/js/buttons.print.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.5/css/jquery.dataTables.min.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.13.5/css/buttons.dataTables.min.css">

    <script>
        $(document).ready(function () {
            const instanceId = '<%= instanceId %>';
            const temp = '<%= userCanEditSources %>';
            let userCanEditSources = false;
            if (temp === "true"){
                userCanEditSources = true;
            }
            const sourcesTable = $('#sourcesTable').DataTable({
                ajax: {
                    url: '/instances/' + instanceId + '/sources',
                    dataSrc: '',
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('Accept', 'application/json');
                    }
                },
                columns: [
                    { data: 'title', title: 'Title', defaultContent: '' },
                    {
                        data: null,
                        title: 'URL',
                        render: function(data, type, row) {
                            const url = row.overrideUrl ? row.overrideUrl : row.source;
                            return '<a href="' + url + '">' + url + '</a>';
                        }
                    },
                    {
                        data: 'loadedDate',
                        title: 'Loaded Date',
                        width: '12%',
                        render: function(data, type, row) {
                            var date = new Date(data);
                            return date.toLocaleString();
                        }
                    },
                    { data: 'chunkCount', title: 'Chunks', width: '5%' },
                    { data: 'tokens', title: 'Tokens', width: '5%' },
                    userCanEditSources ? {
                        title: 'Actions',
                        render: function (data, type, row) {
                            return '<button class="editBtn" data-loaderid="' + row.loaderId + '">Edit</button>' +
                                '<button class="deleteBtn" data-loaderid="' + row.loaderId + '">Delete</button>' +
                                '<button class="reloadBtn" data-loaderid="' + row.loaderId + '">Reload</button>';
                        }
                    } : null
                ].filter(column => column !== null),
                order: [[0, 'asc']],
                dom: 'frtipB',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
            });

            if (userCanEditSources) {
                $('#sourcesTable').on('click', '.editBtn', function () {
                    var loaderId = $(this).data('loaderid');
                    window.location.href = '/instances/' + instanceId + '/sources/' + loaderId;
                });

                $('#sourcesTable').on('click', '.deleteBtn', function () {
                    var loaderId = $(this).data('loaderid');
                    if (confirm('Are you sure you want to delete this source?')) {
                        $('#res').html('<p>Deleting, please wait.</p>');
                        $.ajax({
                            url: '/instances/' + instanceId + '/sources/' + loaderId,
                            type: 'DELETE',
                            success: function (result) {
                                $('#res').html('<p>Source deleted successfully.</p>');
                                sourcesTable.ajax.reload();
                                setTimeout(function () {
                                    $('#res').html('');
                                }, 5000);
                            },
                            error: function (xhr, status, error) {
                                $('#res').html('<p>Error deleting source: ' + error + '</p>');
                                setTimeout(function () {
                                    $('#res').html('');
                                }, 5000);
                            }
                        });
                    }
                });

                $('#sourcesTable').on('click', '.reloadBtn', function () {
                    var loaderId = $(this).data('loaderid');
                    $('#res').html('<p>Reloading source, please wait...</p>');

                    $.ajax({
                        url: '/instances/' + instanceId + '/sources/' + loaderId,
                        type: 'GET',
                        success: function (metadata) {
                            $('#res').html('<p>Metadata retrieved successfully, deleting existing record...');
                            metadata = metadata.loader;
                            $.ajax({
                                url: '/instances/' + instanceId + '/sources/' + loaderId,
                                type: 'DELETE',
                                success: function (result) {
                                    $('#res').html('<p>Source deleted successfully. Now reloading, please wait...</p>');

                                    $.ajax({
                                        url: '/instances/' + instanceId + '/sources',
                                        type: 'POST',
                                        contentType: 'application/json',
                                        data: JSON.stringify(metadata),
                                        success: function (data) {
                                            $('#res').html('<p>Source reloaded successfully.</p>');
                                            sourcesTable.ajax.reload();
                                            setTimeout(function () {
                                                $('#res').html('');
                                            }, 5000);
                                        },
                                        error: function (xhr, status, error) {
                                            $('#res').html('<p>Error reloading source: ' + error + '</p>');
                                            setTimeout(function () {
                                                $('#res').html('');
                                            }, 5000);
                                        }
                                    });
                                },
                                error: function (xhr, status, error) {
                                    $('#res').html('<p>Error deleting source: ' + error + '</p>');
                                    setTimeout(function () {
                                        $('#res').html('');
                                    }, 5000);
                                }
                            });
                        },
                        error: function (xhr, status, error) {
                            $('#res').html('<p>Error retrieving metadata: ' + error + '</p>');
                            setTimeout(function () {
                                $('#res').html('');
                            }, 5000);
                        }
                    });
                });
            }

            const sitemapStatusTable = $('#sitemapStatusTable').DataTable({
                ajax: {
                    url: '/instances/' + instanceId + '/sources/sitemap/status',
                    dataSrc: function (data) {
                        if (data.length === 0) {
                            $('#sitemapStatusContainer').hide();
                        } else {
                            $('#sitemapStatusContainer').show();
                        }
                        return data;
                    },
                    beforeSend: function (xhr) {
                        xhr.setRequestHeader('Accept', 'application/json');
                    }
                },
                columns: [
                    { data: 'siteMapUrl', title: 'SiteMap URL' },
                    { data: 'threadRunning', title: 'Thread Running', render: function(data) { return data ? 'Yes' : 'No'; } },
                    { data: 'totalUrls', title: 'Total URLs' },
                    { data: 'completedUrls', title: 'Completed URLs' }
                ],
                order: [[0, 'asc']],
                dom: 'frtipB',
                buttons: [
                    'copy', 'csv', 'excel', 'pdf', 'print'
                ]
            });
        });
    </script>
<%- include('../../partials/footer') %>